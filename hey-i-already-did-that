

def solution(n, b):
    #Your code here
    def to_ten(n):
      res = [int(j) for j in str(n)]
      p = len(res)-1
      d = []
      for i in res:
        d.append(i * (b**p))
        p -= 1
      return sum(d)
    
    def to_base(n,b):
      sumD = n
      res = [int(j) for j in str(sumD)]
      rem=[sumD%b]
      while sumD >= b:
        sumD = sumD/b
        rem.append(sumD%b)
      return int("".join(map(str, rem[::-1])))
    
    k = len(str(n))
    s = str(n)
    r = []
    i=0
    t = 0
    turn={}
    last = ""
    
    while int(s) not in r:
      res = [int(j) for j in s] 
      for a in range(k-len(s)):
        res.insert(0,0)
      r.append (int("".join(map(str, res))))
      turn[s]=i
      x = sorted(res,reverse=True)
      y = sorted(res)
      x = int("".join(map(str, x)))
      y = int("".join(map(str, y))) 
      if b != 10:
        t = to_ten(x) - to_ten(y)
        s = str(to_base(t,b))
      else:
        s = str(x-y)

      last = s
    
      i+=1
      if int(s) == r[len(r)-1]:
        return 1
        
    return len(turn)-turn[last]
   
